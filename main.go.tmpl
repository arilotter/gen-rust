{{- define "main" -}}

{{- /* Options with default values. */ -}}
{{- $opts := dict -}}
{{- set $opts "client" (ternary (in .Opts.client "" "true") true false) -}}

{{- /* Print help on -help. */ -}}
{{- if exists .Opts "help" -}}
  {{- template "help" $opts -}}
  {{- exit 0 -}}
{{- end -}}

{{- /* Print help on unsupported option. */ -}}
{{- range $k, $v := .Opts }}
  {{- if not (exists $opts $k) -}}
    {{- stderrPrintf "-%v=%q is not supported target option\n\nUsage:\n" $k $v -}}
    {{- template "help" $opts -}}
    {{- exit 1 -}}
  {{- end -}}
{{- end -}}

{{- if ne .WebrpcVersion "v1" -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc version %s\n" .WebrpcTarget .WebrpcVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- if not (minVersion .WebrpcGenVersion "v0.7.0") -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc-gen version %s, please update\n" .WebrpcTarget .WebrpcGenVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- /* Map webrpc data types to Rust. */ -}}
{{- $typeMap := dict }}
{{- set $typeMap "null" "None" -}}
{{- set $typeMap "any" "String" -}}
{{- set $typeMap "byte" "u8" -}}
{{- set $typeMap "bool" "bool" -}}
{{- set $typeMap "uint" "usize" -}}
{{- set $typeMap "uint8" "u8" -}}
{{- set $typeMap "uint16" "u16" -}}
{{- set $typeMap "uint32" "u32" -}}
{{- set $typeMap "uint64" "u64" -}}
{{- set $typeMap "int" "isize" -}}
{{- set $typeMap "int8" "i8" -}}
{{- set $typeMap "int16" "i16" -}}
{{- set $typeMap "int32" "i32" -}}
{{- set $typeMap "int64" "i64" -}}
{{- set $typeMap "float32" "f32" -}}
{{- set $typeMap "float64" "f64" -}}
{{- set $typeMap "string" "String" -}}
{{- set $typeMap "timestamp" "String" -}}

// {{.SchemaName}} {{.SchemaVersion}} {{.SchemaHash}}
// --
// Code generated by webrpc-gen@{{.WebrpcGenVersion}} with {{.WebrpcTarget}} generator. DO NOT EDIT.
//
// {{.WebrpcGenCommand}}

// WebRPC description and code-gen version
pub const WEBRPC_VERSION: &'static str = "{{.WebrpcVersion}}";

// Schema version of your RIDL schema
pub const WEBRPC_SCHEMA_VERSION: &'static str = "{{.SchemaVersion}}";

// Schema hash generated from your RIDL schema
pub const WEBRPC_SCHEMA_HASH: &'static str = "{{.SchemaHash}}";

{{template "types" dict "Messages" .Messages "Services" .Services "TypeMap" $typeMap}}

{{- if $opts.client}}
  {{template "client" dict "Services" .Services "TypeMap" $typeMap}}
{{- end}}

{{- end}}
